class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        
               List<List<String>>  anagrams = new ArrayList<>();
 List<String> words = Arrays.asList(strs); 
        // base case
        if (words == null) {
            return anagrams;
        }
 
      
        List<String> list = words.stream()
                .map(s -> Stream.of(s.split("")).sorted()
                        .collect(Collectors.joining()))
                .collect(Collectors.toList());
 
       
        Map<String, List<Integer>> map = new HashMap<>();
        for (int i = 0; i < list.size(); i++)
        {
            map.putIfAbsent(list.get(i), new ArrayList<>());
            map.get(list.get(i)).add(i);
        }
 
    
        for (var entry: map.entrySet())
        {
            List<String> collection = entry.getValue().stream()
                    .map(i -> words.get(i))
                    .collect(Collectors.toList());
            if (collection.size() >=1) {
                anagrams.add(collection);
            }
        }
 
        return anagrams;
        
    }
}
